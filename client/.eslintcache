[{"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\App.js":"1","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\types.js":"2","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostsList.js":"3","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\AddPostForm.js":"4","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\store.js":"5","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\reducers\\post.js":"6","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\api\\index.js":"7","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\post.js":"8","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\Post.js":"9","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostDetails.js":"10"},{"size":2448,"mtime":1612135240197,"results":"11","hashOfConfig":"12"},{"size":184,"mtime":1612177798772,"results":"13","hashOfConfig":"12"},{"size":1619,"mtime":1612134451634,"results":"14","hashOfConfig":"12"},{"size":4013,"mtime":1612048010587,"results":"15","hashOfConfig":"12"},{"size":354,"mtime":1612048731858,"results":"16","hashOfConfig":"12"},{"size":821,"mtime":1612178133785,"results":"17","hashOfConfig":"12"},{"size":414,"mtime":1612178018568,"results":"18","hashOfConfig":"12"},{"size":1425,"mtime":1612177954618,"results":"19","hashOfConfig":"12"},{"size":2026,"mtime":1612135409752,"results":"20","hashOfConfig":"12"},{"size":2975,"mtime":1612178452754,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"osz32p",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\App.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\types.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostsList.js",["45"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport gridFour from \"../images/grid_four.svg\";\r\nimport gridThree from \"../images/grid_three.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layoutShifter: {\r\n    float: \"right\",\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PostsList = () => {\r\n  const classes = useStyles();\r\n  const posts = useSelector((state) => state.posts.posts);\r\n\r\n  const [layout, setLayout] = useState(\"gridThree\");\r\n\r\n  const calculateMd = () => {\r\n    return layout === \"gridThree\" ? 4 : 3;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"text\" size=\"small\" onClick={() => setLayout(\"gridFour\")}>\r\n        <img\r\n          src={gridFour}\r\n          alt=\"Four Columns Grid Icon\"\r\n          style={{ background: layout === \"gridFour\" ? \"#ccc\" : \"\" }}\r\n        />\r\n      </Button>\r\n      <Button\r\n        variant=\"text\"\r\n        size=\"small\"\r\n        onClick={() => setLayout(\"gridThree\")}\r\n      >\r\n        <img\r\n          src={gridThree}\r\n          alt=\"Three Columns Grid Icon\"\r\n          style={{ background: layout === \"gridThree\" ? \"#ccc\" : \"\" }}\r\n        />\r\n      </Button>\r\n      <Grid container spacing={2} alignContent=\"stretch\">\r\n        {posts.length > 0 &&\r\n          posts.map((post) => (\r\n            <Grid item key={post?._id} xs={12} md={calculateMd()}>\r\n              <Post {...post} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\AddPostForm.js",["46"],"import React, {useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  TextField,\r\n  Select,\r\n  Input,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { createPost} from \"../actions/post\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\r\n\r\nconst postSchema = yup.object().shape({\r\n  title: yup.string().required(),\r\n  subtitle: yup.string().required(),\r\n  content: yup.string().min(20).required(),\r\n  tag: yup.mixed().oneOf(tags),\r\n});\r\n\r\nconst AddPostForm = ({ open, handleClose }) => {\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState(null);\r\n\r\n  const { register, handleSubmit, control, errors, reset } = useForm({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(createPost({...data, image: file}));\r\n    clearForm();\r\n  }\r\n\r\n  const clearForm = () => {\r\n    reset();\r\n    setFile(null);\r\n    handleClose();\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Add New Article</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Fill the form for adding new article\r\n        </DialogContentText>\r\n        <div className={classes.root}>\r\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.title ? true : false}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"subtitle\"\r\n              label=\"Subtitle\"\r\n              name=\"subtitle\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.subtitle ? true : false}\r\n              fullWidth\r\n            />\r\n            <Controller\r\n              as={\r\n                <Select\r\n                  input={<Input />}\r\n                  className={classes.textField}\r\n                  fullWidth\r\n                >\r\n                  {tags.map((tag, index) => (\r\n                    <MenuItem key={index} value={tag}>\r\n                      {tag}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              }\r\n              name=\"tag\"\r\n              control={control}\r\n              error={errors.tag ? true : false}\r\n              defaultValue={tags[0]}\r\n            />\r\n            <TextField\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              name=\"content\"\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.content ? true : false}\r\n              fullWidth\r\n            />\r\n            <FileBase64\r\n              multiple={false}\r\n              onDone={({ base64 }) => setFile(base64)}\r\n            />\r\n          </form>\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"inherit\" onClick={clearForm}>Cancel</Button>\r\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" onClick={() => handleSubmit(onSubmit)()}>\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n",["47","48"],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\store.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\reducers\\post.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\api\\index.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\post.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\Post.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostDetails.js",["49"],{"ruleId":"50","severity":1,"message":"51","line":17,"column":9,"nodeType":"52","messageId":"53","endLine":17,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":7,"column":3,"nodeType":"52","messageId":"53","endLine":7,"endColumn":7},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":44,"column":6,"nodeType":"61","endLine":44,"endColumn":16,"suggestions":"62"},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Text' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [dispatch, id]",{"range":"68","text":"69"},[1274,1284],"[dispatch, id]"]