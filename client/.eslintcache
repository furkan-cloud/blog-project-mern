[{"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\App.js":"1","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\types.js":"2","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostsList.js":"3","C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\AddPostForm.js":"4"},{"size":2075,"mtime":1611951005300,"results":"5","hashOfConfig":"6"},{"size":43,"mtime":1609886238256,"results":"7","hashOfConfig":"6"},{"size":162,"mtime":1609887500761,"results":"8","hashOfConfig":"6"},{"size":2161,"mtime":1611951997115,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"osz32p",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\App.js",["19"],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\actions\\types.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\PostsList.js",[],"C:\\Users\\LENOVO\\Projects\\personal\\blogProject\\client\\src\\components\\AddPostForm.js",["20"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  TextField,\r\n  Select,\r\n  Input,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"ract-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\r\n\r\nconst postSchema = yup.object().shape({\r\n  title: yup.string().required(),\r\n  subtitle: yup.string().required(),\r\n  content: yup.string().min(20).required(),\r\n  tag: yup.mixed().oneOf(tags),\r\n});\r\n\r\nexport const AddPostForm = ({ open, handleClose }) => {\r\n  const { register, handleSubmit, control, errors, reset } = useForms({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog open={open} onClose={handleClose}>\r\n      <DialogTitle>Add New Article</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Fill the form for adding new article\r\n        </DialogContentText>\r\n        <div className={classes.root}>\r\n          <form noValidate autoComplete=\"off\" onSubmit={}>\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Başlık\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.title ? true : false}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"subtitle\"\r\n              label=\"Alt Başlık\"\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              className={classes.textField}\r\n              size=\"small\"\r\n              inputRef={register}\r\n              error={errors.subtitle ? true : false}\r\n              fullWidth\r\n            />\r\n          </form>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n",{"ruleId":"21","severity":1,"message":"22","line":37,"column":9,"nodeType":"23","messageId":"24","endLine":37,"endColumn":19},{"ruleId":null,"fatal":true,"severity":2,"message":"25","line":52,"column":56},"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  50 |         </DialogContentText>\n  51 |         <div className={classes.root}>\n> 52 |           <form noValidate autoComplete=\"off\" onSubmit={}>\n     |                                                        ^\n  53 |             <TextField\n  54 |               id=\"title\"\n  55 |               label=\"Başlık\""]